<template>
<view>
  <view class="weui-cells weui-cells_after-title">
    <view class="weui-cell">
      <view class="weui-cell__hd">
        <view class="weui-label">手机号</view>
      </view>
      <view class="weui-cell__bd">
        <input class="weui-input" placeholder="您的手机号码" value="{{phone}}" @input="phoneInputHandle"/>
      </view>
      <view class="weui-cell__ft">
        <view class="veri-code" @tap="requestCode" disabled="{{isRequst}}">{{codeBtnText}}</view>
      </view>
    </view>
    <view class="weui-cell">
      <view class="weui-cell__hd">
        <view class="weui-label">短信验证</view>
      </view>
      <view class="weui-cell__bd">
        <input class="weui-input" placeholder="请输入短信验证码" value="{{veriCode}}" @input="codeInputHanle"/>
      </view>
    </view>
  </view>
  <view class="btn-submit">
    <button class="weui-btn" type="warn" disabled="{{!isSubmit}}" @tap="submitCode">{{sumitBtnText}}</button>
  </view>
</view>
</template>

<script>
  import wepy from 'wepy'

  export default class LoginPage extends wepy.page {
    config = {
      navigationBarTitleText: '登录'
    }

    data = {
      redirectUrl: '',
      phone: '', // 手机号
      veriCode: '', // 验证码
      isRequst: true, // 请求验证码限制
      sumitBtnText: '提交',
      codeBtnText: '获取验证码',
      isSubmit: false // 提交限制
    }

    onLoad (params) {
      // 获取跳转至登陆页面的路由
      this.redirectUrl = params.redirect ? params.redirect : ''
    }

    onShow() {
      // 防止用户点击获取验证码后，切出页面再返回时，导致页面展示错乱
      wx.getStorage({
        key: 'code_timer_id',
        success: (res) => {
          let timerId = res.data
          if (timerId) {
            clearInterval(timerId)
          }
        }
      })
    }

    watch = {
      veriCode (val) {
        this.isSubmit = (val.length === 6 && this.phone.length === 11)
      },
      phone (val) {
        this.isSubmit = (val.length === 11 && this.veriCode.length === 6)
      }
    }

    methods = {
      phoneInputHandle (e) {
        this.phone = e.detail.value
      },
      codeInputHanle (e) {
        this.veriCode = e.detail.value
      }
    }

    requestCode () {
      if (!(this.phone.length === 11) || isNaN(this.phone)) {
        wepy.showModal({
          content: '请输入11位手机号',
          showCancel: false,
          confirmColor: '#ce3b28'
        })
        return
      }
      if (!(/^1[34578]\d{9}$/.test(this.phone))) {
        wepy.showModal({
          content: '请输入正确手机号',
          showCancel: false,
          confirmColor: '#ce3b28'
        })
        return
      }
      // 发起获取验证码的请求
      let params = this.phone
      this.$rest.auth.getCode(null, `${params}/verification_code`).then(res => {
        if (res.code === 0) {
          // 获取验证码 60s倒数
          let count = 60
          this.codeBtnText = count + 's'
          let timer = setInterval(() => {
            count -= 1
            this.codeBtnText = count + 's'
            if (count === 0) {
              this.codeBtnText = '重新获取验证码'
              this.isRequst = false
              clearInterval(timer)
            }
            this.$apply()
          }, 1000)
          // 存储此timer至本地
          wepy.setStorage({
            key: 'code_timer_id',
            data: timer
          })
          wepy.showModal({
            content: '获取验证码成功！',
            showCancel: false,
            confirmColor: '#ce3b28'
          })
        } else {
          let message = res.data.error_msg ? res.data.error_msg : res.data.message
          // 验证错误
          wepy.showModal({
            content: message,
            showCancel: false,
            confirmColor: '#ce3b28'
          })
        }
      })
    }
    submitCode() {
      if (isNaN(this.veriCode)) {
        wepy.showModal({
          content: '请输入正确验证码',
          showCancel: false,
          confirmColor: '#ce3b28'
        })
        return
      }
      this.sumitBtnText = '验证中...'
      this.isSubmit = false
      // 发起用户信息提交的操作
      let params = {
        mobile_number: this.phone, // 手机号
        verify_code: this.veriCode // 验证码
      }
      this.$rest.auth.postUser(params).then(res => {
        this.sumitBtnText = '提交'
        if (res.code === 0) {
          let redirectUrl = this.redirectUrl
          if (redirectUrl) {
            wx.redirectTo({
              url: `/${redirectUrl}`,
              // 从tab页跳转至登陆页
              fail: () => {
                wx.switchTab({
                  url: `/${redirectUrl}` // 竞拍大厅
                })
              }
            })
          } else {
            wx.redirectTo({
              url: '/pages/auchall' // 竞拍大厅
            })
          }
        } else {
          let message = res.data.error_msg ? res.data.error_msg : res.data.message
          // 验证错误
          wepy.showModal({
            content: message,
            showCancel: false,
            confirmColor: '#ce3b28'
          })
          this.veriCode = ''
        }
        this.$apply()
      })
    }
  }
</script>
<style lang="less">
  @import '../../assets/modules/login/login';
</style>
